<?xml version="1.0" encoding="UTF-8" ?>

<configuration>
	<configSections>
		<section name="log4net" type="System.Configuration.IgnoreSectionHandler" />
		<sectionGroup name="sharpwebmail">
			<section name="general" type='System.Configuration.SingleTagSectionHandler, System, Version=*.*.*.*, Culture=neutral, PublicKeyToken=b77a5c561934e089'/>
			<section name="login" type='System.Configuration.SingleTagSectionHandler, System, Version=*.*.*.*, Culture=neutral, PublicKeyToken=b77a5c561934e089'/>
			<sectionGroup name="read">
				<section name="servers" type='System.Configuration.NameValueSectionHandler, System, Version=*.*.*.*, Culture=neutral, PublicKeyToken=b77a5c561934e089'/>
				<section name="inbox" type='System.Configuration.SingleTagSectionHandler, System, Version=*.*.*.*, Culture=neutral, PublicKeyToken=b77a5c561934e089'/>
				<section name="message" type='System.Configuration.SingleTagSectionHandler, System, Version=*.*.*.*, Culture=neutral, PublicKeyToken=b77a5c561934e089'/>
			</sectionGroup>
			<sectionGroup name="send">
				<section name="servers" type='System.Configuration.NameValueSectionHandler, System, Version=*.*.*.*, Culture=neutral, PublicKeyToken=b77a5c561934e089'/>
				<section name="message" type='System.Configuration.SingleTagSectionHandler, System, Version=*.*.*.*, Culture=neutral, PublicKeyToken=b77a5c561934e089'/>
			</sectionGroup>
		</sectionGroup>
	</configSections>

	<sharpwebmail>
		<!-- 
			The <general> section is used to configure global options
				default_lang: Default localization language
		-->
		<general
				default_lang="en-US"
				title = "[general title] configuration setting"
		/>
		<!-- 
			The <login> section is used to configure login screen options
				title: Title displayed in login screen
				mode:
					1->	Full email required for login
					2->	Any username is allowed
					3->	Any username is allowed but a login_mode_append
						string is added to supplied username
				append: text to append to user supplied username
        -->
		<login
				title="[login title] configuration setting"
				mode="1"
				append=""
		/>
		<!-- 
			The <read> section is used to configure options that control mail reading
		-->
		<read>
			<!-- 
				The <inbox> section is used to configure options that control the inbox
					pagesize: Number of mails per page
					stat: stat mode (unused)
			-->
			<inbox
					pagesize="15"
					stat="2"
			/>
			<!-- 
				The <servers> section is used to configure servers used to read mail
					Key:	The key values are regular expressions tested sequentially.
							The first that matches against the username is used. If a 
							default value is wanted, the latest entry should be "*" or ".*".
							If you setup duplicated keys, only the latest is used.
					Value:	The value of each entry is the configuration of that server
							entry. The format is <protocol>:<hostname or address>:<port>
							Valid protocols are:
												- pop3
												- imap
				Examples: <add key="@domain1$" value="pop3:mailserver1:110" />
				          <add key="@(domain2|domain3)$" value="imap:mailserver2:110" />
				          <add key="*" value="pop3:localhost:110" />
			-->
			<servers>
				<add key="*" value="pop3:localhost:110" />
			</servers>
			<!-- 
				The <message> section is used to configure servers used to send mail
					sanitizer_mode: level of sanitization passed to html content
									(be careful, the sanitizer has not been fully tested and may hide
									relevant portions of mails if it gets confused)
									0-> Disabled (default)
									1-> Enabled
					temppath:	where to create temporary files when unpacking attachments
								(relative to the root of the application)
								If you leave it blank or unset, unpacking files will be disabled
			-->
			<message
					temppath="../tmpdir/"
					sanitizer_mode="0"
			/>
		</read>
		<!-- 
			The <send> section is used to configure sending mail options
		-->
		<send>
			<!-- 
				The <servers> section is used to configure servers used to send mail
					Key:	The key values are regular expressions tested sequentially.
							The first that matches against the username is used. If a 
							default value is wanted, the latest entry should be "*" or ".*".
							If you setup duplicated keys, only the latest is used.
					Value:	The value of each entry is the configuration of that server
							entry. The format is <protocol>:<hostname or address>:<port>
							Valid protocols are:
												- smtp
				Example: <add key="*" value="smtp:localhost:25" />
				Note: Port number is ignored in the current implementation

			-->
			<servers>
				<add key="*" value="smtp:localhost:25"/>
			</servers>
			<!-- 
				The <message> section is used to configure servers used to send mail
					sanitizer_mode: level of sanitization passed to html content
									(be careful, the sanitizer has not been fully tested and may hide
									relevant portions of mails if it gets confused)
									0-> Disabled (default)
									1-> Enabled
					temppath:	where to create temporary files for sending new files as attachments
								(relative to the root of the application)
								If you leave it blank or unset, attaching new files will be disabled.
								But, you will be able to attach files unpacked from read messages (incase
								it is enabled)
			-->
			<message
					temppath="../tmpdir/"
					sanitizer_mode="0"
			/>
		</send>
	</sharpwebmail>

	<appSettings>
	</appSettings>

         <!-- This section contains the log4net configuration settings -->
         <log4net>
			<appender name="LogFileAppender" type="log4net.Appender.FileAppender">
				<param name="File" value="${TMP}\\SharpWebMail-logfile.txt" />
				<param name="AppendToFile" value="true" />
				<layout type="log4net.Layout.PatternLayout">
					<param name="Header" value="[SharpWebMail logging session started]\r\n" />
					<param name="Footer" value="[SharpWebMail logging session finished]\r\n" />
					<param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n" />
				</layout>
			</appender>
			<root>
				<level value="OFF" />
			</root>
			<logger name="anmar" additivity="false">
<!--
				<appender-ref ref="LogFileAppender" />
-->
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<!-- Specify the level for some specific categories -->
			<logger name="anmar.SharpMimeTools.SharpMimeHeader">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpMimeTools.SharpMimeMessage">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpMimeTools.SharpMimeMessageCollection">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpMimeTools.SharpMimeMessageStream">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpMimeTools.SharpMimeTools">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpWebMail.CTNInbox">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpWebMail.CTNSimplePOP3Client">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpWebMail.CTNSimpleTCPClient">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpWebMail.EmailServerInfo">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpWebMail.ServerSelector">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpWebMail.SimpleEmailClient">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpWebMail.SimpleIMAPClient">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
			<logger name="anmar.SharpWebMail.UI">
				<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
				<level value="OFF" />
			</logger>
         </log4net>

    <system.web>
        <!-- 

            The <sessionState" section is used to configure session state for the application.  
            It supports four modes: "Off", "InProc", "StateServer", and "SqlServer".  The 
            later two modes enable session state to be stored off the web server machine - 
            allowing failure redundancy and web farm session state scenarios.

            <sessionState mode="InProc"
                          stateConnectionString="tcpip=127.0.0.1:42424"
                          sqlConnectionString="data source=127.0.0.1;trusted_connection=true"
                          cookieless="false" 
                          timeout="20" />

        -->

        <!--

            The <customErrors> section enables configuration of what to do if/when an 
            unhandled error occurs during the execution of a request.  Specifically, it 
            enables developers to configure html error pages to be displayed in place of 
            a error stack trace:

            <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
               <error statusCode="403" redirect="NoAccess.htm"/>
               <error statusCode="404" redirect="FileNotFound.htm"/>
            <customErrors>

        -->

            <customErrors 
               mode="Off"
            /> 

        <!-- 

            The <authentication> section enables configuration of the security authentication 
            mode used by ASP.NET to identify an incoming user.  It supports a "mode" 
            attribute with four valid values: "Windows", "Forms", "Passport" and "None":  

            The <forms> section is a sub-section of the <authentication> section, 
            and supports configuring the authentication values used when Forms 
            authentication is enabled above:

            <authentication mode="Windows">

                    <forms name=".ASPXAUTH" 
                           loginUrl="login.aspx" 
                           protection="Validation" 
                           timeout="999999" />

             </authentication>

        -->

            <authentication mode="Forms">
                <forms name=".ASPXSharpWebMail" loginUrl="login.aspx" protection="All" path="/" timeout="20" />
            </authentication>

        <!--

            The <authorization> section enables developers/administrators to configure 
            whether a user or role has access to a particular page or resource.  This is 
            accomplished by adding "<allow>" and "<deny>" sub-tags beneath the <authorization> 
            section - specifically detailing the users/roles allowed or denied access.

            Note: The "?" character indicates "anonymous" users (ie: non authenticated users).  
            The "*" character indicates "all" users. 

            <authorization>
               <allow users="joeuser" />
               <allow roles="Admins" />
               <deny users="*" />
            </authorization>

        -->

            <authorization>
               <deny users="?" />
            </authorization>

        <!--

            DYNAMIC DEBUG COMPILATION
            Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
            false will improve runtime performance of this application. 
            Set compilation debug="true" to insert debugging symbols (.pdb information)
            into the compiled page. Because this creates a larger file that executes
            more slowly, you should set this value to true only when debugging and to
            false at all other times. For more information, refer to the documentation about
            debugging ASP.NET files.

        -->

            <compilation 
               defaultLanguage="c#"
               debug="false"
            />


        <!--

            APPLICATION-LEVEL TRACE LOGGING
            Application-level tracing enables trace log output for every page within an application. 
            Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
            trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
            application trace log by browsing the "trace.axd" page from your web application
            root. 

        -->

            <trace
               enabled="false"
               requestLimit="10"
               pageOutput="false"
               traceMode="SortByTime"
               localOnly="true"
            />
    </system.web>
<!--
    <location path="sharpwebmail.css">
      <system.web>
         <authorization>
            <allow users="?"/>
         </authorization>
      </system.web>
    </location>
    <location path="images">
      <system.web>
         <authorization>
            <allow users="?"/>
         </authorization>
      </system.web>
    </location>
-->
</configuration>
