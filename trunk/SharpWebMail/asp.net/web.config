<?xml version="1.0" encoding="UTF-8" ?>

<configuration>
	<configSections>
		<section name="log4net" type="System.Configuration.IgnoreSectionHandler" />
		<section name="sharpwebmail" type="anmar.SharpWebMail.SharpWebMailConfigHandler, SharpWebMail" />
	</configSections>
	<sharpwebmail>
		<!-- 
			The <general> section is used to configure global options
				default_lang: Default localization language
				title: Title displayed in every page.
		-->
		<general
				default_lang="en"
				title = "[general title] configuration setting"
		/>
		<!-- 
			The <login> section is used to configure login screen options

				title: Title displayed in login screen

				mode:
					1->	Full email required for login
					2->	Any username is allowed
					3->	Any username is allowed but the append
						string is added to supplied username

				append: text to append to user supplied username

				serverselection:
					auto -> The server is selected using the configured regular expressions.
					manual -> The server is selected by the user.

				enablequerystringlogin: Login credentials can be given in the querystring of
					the login page. The provided credentials must comply with the same
					restrictions as when provided manually. The querystring items used are
					username and password. Possible values:
						true-> enabled
						false-> disabled

					Note: Be careful when using this option as the passwords will be seen in
						clear text easily (for example in the browser history).
					Example: http://localhost/login.aspx?username=anmar@dev.anmar.eu.org&password=testpass
        -->
		<login
				title="[login title] configuration setting"
				mode="1"
				append=""
				serverselection="auto"
				enablequerystringlogin="false"
		/>
		<!-- 
			The <read> section is used to configure options that control mail reading
		-->
		<read>
			<!-- 
				The <inbox> section is used to configure options that control the inbox page.
					pagesize: Number of mails per page
					stat: Determines how to handle queries to email server when inbox page is visited.
						The queries are used to update the list of available messages on the server.
						(default value: 2)
						1-> Query the server on every visit to inbox page.
						2-> Query the server only when refresh button is pressed or when it's
							necessary to get uncached message details.
					sort: Sets the default sort expression for the inbox. The value must be the column name
						followed by "ASC" (ascending) or "DESC" (descending). Columns are sorted
						ascending by default. Multiple columns can be separated by commas.
						Columns names that can be used: msgnum, Size, uidl, From, FromName, To, Subject, Date. 
						(Default value: msgnum DESC)
						
						Important Note: Only msgnum, Size or uidl should be used, as they are the only values that
						are 'cheap' to obtain. In order to have the other columns available for sorting purposes,
						the message headers of all the messages in your inbox must be retrieved and parsed from your
						mail server. In normal operation only the messages that are going to be displayed in one inbox
						page are retrieved. So in case your users have big mailboxes, it's not a good idea to change this.
						It would be a better idea to use a mail server that generates the message numbers in the desired way.
					commit_onexit: If true, when the user performs a logout, all messages marked for deletion are deleted from the email server.
						(Default value: true)
					commit_ondelete: If true, when the user deletes a message from the inbox page, it's deleted from the email server.
						Otherwise, the message is marked for deletion. (Default value: false)
			-->
			<inbox
					pagesize="15"
					stat="2"
					sort="msgnum DESC"
					commit_onexit="true"
					commit_ondelete="false"
			/>
			<!-- 
				The <servers> section is used to configure servers used to read mail
					name: Descriptive name of the server. This option is optional unless you set
						  serverselection to manual.
					regexp:	Regular expressions tested against the username to decide.
							The first that matches against the username is used. In order to
							configure a default value, the latest entry should be "*" or ".*".
							This option is optional unless you set serverselection to auto.
					protocol: Valid protocols are: pop3, imap.
					host: Host name or ip address of the mail server.
					port: Port number.

				Examples:
					- POP3 Server on localhost port 110 that will match for users with usernames in the form user1@domain1
						<server
							name="POP3 Server for domain1 users"
							regexp="@domain1$"
							protocol="pop3"
							host="localhost"
							port="110"
						/>
 
					- IMAP Server on mailserver2 port 143 that will match for users with usernames in the form user1@domain2 or user1@domain3
						<server
							name="IMAP Server for domain2 and domain3"
							regexp="@(domain2|domain3)$"
							protocol="imap"
							host="mailserver2"
							port="143"
						/>
					- POP3 Server on pop3server port 110 that will match for every username that has not matched a previous server entry.
						<server
							name="Default POP3 Server"
							regexp="*"
							protocol="pop3"
							host="pop3server"
							port="110"
						/>
			-->
			<servers>
				<server
					name="Default POP3 Server"
					regexp="*"
					protocol="pop3"
					host="localhost"
					port="110"
				/>
			</servers>
			<!-- 
				The <message> section is used to configure servers used to send mail
					sanitizer_mode: level of sanitization passed to html content
									(be careful, the sanitizer has not been fully tested and may hide
									relevant portions of mails if it gets confused)
									0-> Disabled (default)
									1-> Enabled
					temppath:	where to create temporary files when unpacking attachments
								(relative to the root of the application)
								If you leave it blank or unset, unpacking files will be disabled
					commit_ondelete: If true, when you delete a message while reading it, it's deleted from the email server.
						Otherwise, the message is marked for deletion. (Default value: false)
					UseServerEncoding:  If UseServerEncoding is set to true, then instead of using the RFC 2045 default
						(us-ascii) it will use the default encoding configured in the server. (Default value: false)
						This is only related to content that does not have the appropriate header parameter mandating other
						encoding. OE, yahoo, and others are known to not issue appropriate RFC 2045 header under some configurations
						so this setting may allow better decoding e-mail generated by them.
			-->
			<message
					temppath="../tmpdir/"
					sanitizer_mode="0"
					commit_ondelete="false"
					UseServerEncoding="false"
			/>
		</read>
		<!-- 
			The <send> section is used to configure sending mail options
		-->
		<send>
			<!-- 
				The <servers> section is used to configure servers used to send mail
					name: Descriptive name of the server.
					regexp:	Regular expressions tested against the username to decide.
							The first that matches against the username is used. In order to
							configure a default value, the latest entry should be "*" or ".*".
					protocol: Valid protocols are: smtp, smtpauth
					host: Host name or ip address of the server.
					port: Port number.

				Examples:
					<server
						name="Default SMTP Server"
						regexp="*"
						protocol="smtp"
						host="localhost"
						port="25"
					/>
				
				Note: Port number is only used if smtp_engine option is set to opensmtp or dotnetopenmail
				Note: smtpauth is only supported if smtp_engine option is set to opensmtp or dotnetopenmail

			-->
			<servers>
				<server
					name="Default SMTP Server"
					regexp="*"
					protocol="smtp"
					host="localhost"
					port="25"
				/>
			</servers>
			<!-- 
				The <message> section is used to configure servers used to send mail
					sanitizer_mode: level of sanitization passed to html content
									(be careful, the sanitizer has not been fully tested and may hide
									relevant portions of mails if it gets confused)
									0-> Disabled (default)
									1-> Enabled
					temppath:	where to create temporary files for sending new files as attachments
								(relative to the root of the application)
								If you leave it blank or unset, attaching new files will be disabled.
								But, you will be able to attach files unpacked from read messages (incase
								it is enabled)
					smtp_engine: SMTP engine to use when sending emails. .NET internal implementation depends
								 on CDO, and gives problems on some environments. You have to use opensmtp or
								 dotnetopenmail as engine if you want to use SMTP AUTH or a non standard port
								 with one of your configured servers.
								 Valid engines are:
								  - internal
								  - opensmtp
								  - dotnetopenmail
					attach_ui: Set the way the user interface for uploading attachments behaves. Valid values:
							- normal: Once you add a new file it's selected for inclusion. Then you can continue adding files or
									hit the "Attach" button to continue writing the message
							- simple: Once you add a new file it's selected for inclusion and automatically returns to the message view.
									Then in order to add more files you must hit the "Attachments" button again.
					ReplyQuoteChar:  Chars used to prefix each line of the original body of a message when replying in text mode browsers. (default value: "> ")
					ReplyQuoteStyle:  Style used in the <blockquote> element to quote the original body of a message when replying in html mode browsers.
							(default value: "padding-left: 5px; margin-left: 5px; border-left: #0000ff 2px solid; margin-left: 0px")
					ForwardAttachments: When forwarding, do it with or without attachments. (default value: true)
			-->
			<message
					temppath="../tmpdir/"
					sanitizer_mode="0"
					smtp_engine="internal"
					attach_ui="normal"
			/>
			<!-- 
				The <addressbook> section is used to configure the datasources for the Address Books
				Several <addressbook> sections are allowed.
				Special characters such as ampersand should be html encoded: &amp;

				Parameters:
					Name: Unique name for the Address Book.
					Type: Type of lookup that will be done.
						Valid types are:
							- none: Disables address book
							- ldap: Performs a ldap search
							- odbc: Performs a query through a ODBC provider
							- oledb: Performs a query through a OLEDB provider
					ConnectionString: the connection string used to contact the server. The format depends on Type.
					ConnectionUserName: Optional username used to make the connection to the server. If it's not provided,
								the username of the current user is used.
					ConnectionPassword: Optional password used to make the connection to the server. If it's not provided,
								the password of the current user is used.
					SearchString: Query to do in the server. Optionally $USERNAME$ is replaced with the current
								username as authenticated by the mail server.
					NameColumn: Column returned by the query that contains the contact name.
					EmailColumn: Column returned by the query that contains the contact email address.
					PageSize: Results per page.
					SearchStringRealName: Optional search query for getting the user's real name. $USERNAME$ is replaced
									with the current username as authenticated by the mail server.
					AllowUpdate: Enable read/write access to address book entries. (default value: false)
									- You need to add to the SearchString query a column that is unique.
									- And in the case of per-user books, you need to select the column that contains the
									  username that owns the entry.
					OwnerColumn: Column where you store the username who owns the entry
					
					Examples:
						- LDAP lookup against a Active Directory ldap:
							<addressbook 
								Name="Domain Users"
								Type="ldap"
								ConnectionString="LDAP://ldap.dev.anmar.eu.org/cn=Users,dc=dev,dc=anmar,dc=eu,dc=org"
								ConnectionUserName="cn=ldap-read,cn=Users,dc=dev,dc=anmar,dc=eu,dc=org"
								ConnectionPassword="thepassword"
								SearchString="(objectClass=*)"
								NameColumn="displayName"
								EmailColumn="mail"
								PageSize="10"
								SearchStringRealName="(&amp;(objectClass=*)(mail=$USERNAME$))"
								/>
						- OLEDB query against an MS Access Database:
							<addressbook 
								Name="MS Access Address Book"
								Type="oledb"
								ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0; Data Source=C:\addressbook.mdb"
								SearchString="SELECT name, email FROM Table1"
								NameColumn="name"
								EmailColumn="email"
								PageSize="10"
								SearchStringRealName="SELECT name, email FROM Table1 WHERE email='$USERNAME$'"
								/>
						- ODBC query against an MS Access Database (read/write mode):
							<addressbook 
								Name="MS Access Address Book"
								Type="odbc"
								ConnectionString="Driver={Microsoft Access Driver (*.mdb)};DBQ=C:\addressbook.mdb"
								SearchString="SELECT id, name, email, owner FROM Table1 WHERE owner='$USERNAME$'"
								NameColumn="name"
								EmailColumn="email"
								PageSize="10"
								AllowUpdate="true"
								OwnerColumn="owner"
								/>
			-->
		</send>
	</sharpwebmail>
	<appSettings>
	</appSettings>
	<!-- This section contains the log4net configuration settings -->
	<log4net>
		<appender name="LogFileAppender" type="log4net.Appender.FileAppender">
			<param name="File" value="${TMP}\\SharpWebMail-logfile.txt" />
			<param name="AppendToFile" value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<param name="Header" value="[SharpWebMail logging session started]\r\n" />
				<param name="Footer" value="[SharpWebMail logging session finished]\r\n" />
				<param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n" />
			</layout>
		</appender>
		<logger name="anmar" additivity="false">
<!-- 
			<appender-ref ref="LogFileAppender" />
-->
			<!-- ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF -->
			<level value="OFF" />
		</logger>
	</log4net>

	<system.web>
<!-- 

            The <sessionState" section is used to configure session state for the application.  
            It supports four modes: "Off", "InProc", "StateServer", and "SqlServer".  The 
            later two modes enable session state to be stored off the web server machine - 
            allowing failure redundancy and web farm session state scenarios.

            <sessionState mode="InProc"
                          stateConnectionString="tcpip=127.0.0.1:42424"
                          sqlConnectionString="data source=127.0.0.1;trusted_connection=true"
                          cookieless="false" 
                          timeout="20" />
-->

<!--
            The <customErrors> section enables configuration of what to do if/when an 
            unhandled error occurs during the execution of a request.  Specifically, it 
            enables developers to configure html error pages to be displayed in place of 
            a error stack trace:

            <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
               <error statusCode="403" redirect="NoAccess.htm"/>
               <error statusCode="404" redirect="FileNotFound.htm"/>
            <customErrors>
-->
		<customErrors 
			mode="Off"
		/> 

<!-- 
            The <authentication> section enables configuration of the security authentication 
            mode used by ASP.NET to identify an incoming user.  It supports a "mode" 
            attribute with four valid values: "Windows", "Forms", "Passport" and "None":  

            The <forms> section is a sub-section of the <authentication> section, 
            and supports configuring the authentication values used when Forms 
            authentication is enabled above:

            <authentication mode="Windows">
                    <forms name=".ASPXAUTH" 
                           loginUrl="login.aspx" 
                           protection="Validation" 
                           timeout="999999" />
             </authentication>
-->
		<authentication mode="Forms">
			<forms
				name=".ASPXSharpWebMail"
				loginUrl="login.aspx"
				protection="All"
				path="/"
				timeout="20"
				slidingExpiration="true"
			/>
		</authentication>

<!--
            The <authorization> section enables developers/administrators to configure 
            whether a user or role has access to a particular page or resource.  This is 
            accomplished by adding "<allow>" and "<deny>" sub-tags beneath the <authorization> 
            section - specifically detailing the users/roles allowed or denied access.

            Note: The "?" character indicates "anonymous" users (ie: non authenticated users).  
            The "*" character indicates "all" users. 

            <authorization>
               <allow users="joeuser" />
               <allow roles="Admins" />
               <deny users="*" />
            </authorization>
-->
		<authorization>
		   <deny users="?" />
		</authorization>

<!--
            DYNAMIC DEBUG COMPILATION
            Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
            false will improve runtime performance of this application. 
            Set compilation debug="true" to insert debugging symbols (.pdb information)
            into the compiled page. Because this creates a larger file that executes
            more slowly, you should set this value to true only when debugging and to
            false at all other times. For more information, refer to the documentation about
            debugging ASP.NET files.
-->
		<compilation 
		   defaultLanguage="c#"
		   debug="false"
		/>

<!--
            APPLICATION-LEVEL TRACE LOGGING
            Application-level tracing enables trace log output for every page within an application. 
            Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
            trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
            application trace log by browsing the "trace.axd" page from your web application
            root. 
-->
		<trace
		   enabled="false"
		   requestLimit="10"
		   pageOutput="false"
		   traceMode="SortByTime"
		   localOnly="true"
		/>
	</system.web>
</configuration>
